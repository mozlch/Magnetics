 function BZ=xbz(Rp,Zp,Rc,Zc,Sc);%% Compute vertical field%% function BZ=xbz(Rp,Zp,Rc,Zc,Sc);% compute BZ(T) at the points (Rp,Zp) due to unit currents (A) in (Rc,Zc) with area Sc% BZ(length(Rp),length(Rc)): each row refers to a point, each column to a coil%       RR   = Rp*ones(size(Rc')); ZZ   = Zp*ones(size(Zc')); rr   = ones(size(Rp))*Rc';zz   = ones(size(Rp))*Zc';ss   = ones(size(Rp))*Sc';RA   = RR+rr;				% RAij= Ri+rjDR   = RR-rr;				% DRij= Ri-rjDZ   = ZZ-zz;				% DZij= Zi-zjD2   = DR.*DR+DZ.*DZ+eps;R2Z  = RR.*RR+DZ.*DZ;K2   = 4*(Rp*Rc')./(RA.*RA+DZ.*DZ);KI   = sqrt(RA.*RA+DZ.*DZ);[K,E]= ellipke(K2);BZ   = 0.2e-6*(K-(R2Z-rr.*rr)./D2.*E)./KI;%inear = find(D2<ss/pi & D2 ~= eps);if isempty(inear)==0;  disp('some points near to coils!');  BZ(inear) =-2e-7*pi*DR(inear)./ss(inear);end%ising = find(D2 ==eps);if isempty(ising)==0;  disp('+++ WARNING: some point overlaps with coil centre +++');  BZ(ising) = 0;end%return